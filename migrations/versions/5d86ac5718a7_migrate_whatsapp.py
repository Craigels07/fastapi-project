"""migrate whatsapp

Revision ID: 5d86ac5718a7
Revises: 3b2166b032ed
Create Date: 2025-05-28 16:49:32.143995

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5d86ac5718a7"
down_revision: Union[str, None] = "3b2166b032ed"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("checkpoint_writes_thread_id_idx", table_name="checkpoint_writes")
    op.drop_table("checkpoint_writes")
    op.drop_index("checkpoint_blobs_thread_id_idx", table_name="checkpoint_blobs")
    op.drop_table("checkpoint_blobs")
    op.drop_index("checkpoints_thread_id_idx", table_name="checkpoints")
    op.drop_table("checkpoints")
    op.drop_table("checkpoint_migrations")
    op.add_column(
        "whatsapp_messages", sa.Column("thread_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "whatsapp_messages", sa.Column("message_sid", sa.String(), nullable=True)
    )
    op.add_column("whatsapp_messages", sa.Column("wa_id", sa.String(), nullable=True))
    op.add_column(
        "whatsapp_messages", sa.Column("sms_status", sa.String(), nullable=True)
    )
    op.add_column(
        "whatsapp_messages", sa.Column("profile_name", sa.String(), nullable=True)
    )
    op.add_column(
        "whatsapp_messages", sa.Column("message_type", sa.String(), nullable=True)
    )
    op.add_column(
        "whatsapp_messages", sa.Column("num_segments", sa.Integer(), nullable=True)
    )
    op.add_column(
        "whatsapp_messages", sa.Column("num_media", sa.Integer(), nullable=True)
    )
    op.add_column("whatsapp_messages", sa.Column("media", sa.JSON(), nullable=True))
    op.add_column("whatsapp_messages", sa.Column("intent", sa.String(), nullable=True))
    op.add_column(
        "whatsapp_messages", sa.Column("sentiment", sa.String(), nullable=True)
    )
    op.add_column("whatsapp_messages", sa.Column("entities", sa.JSON(), nullable=True))
    op.create_foreign_key(
        None, "whatsapp_messages", "whatsapp_threads", ["thread_id"], ["id"]
    )
    op.add_column(
        "whatsapp_threads", sa.Column("organization_id", sa.Integer(), nullable=True)
    )
    # op.alter_column('whatsapp_threads', 'is_active',
    #            existing_type=sa.INTEGER(),
    #            type_=sa.Boolean(),
    #            existing_nullable=True)
    op.execute(
        "ALTER TABLE whatsapp_threads ALTER COLUMN is_active TYPE BOOLEAN USING is_active::boolean"
    )
    op.execute(
        "ALTER TABLE whatsapp_threads ALTER COLUMN created_at TYPE TIMESTAMP WITHOUT TIME ZONE USING created_at::timestamp without time zone"
    )
    op.execute(
        "ALTER TABLE whatsapp_threads ALTER COLUMN updated_at TYPE TIMESTAMP WITHOUT TIME ZONE USING created_at::timestamp without time zone"
    )
    op.create_foreign_key(
        None, "whatsapp_threads", "organizations", ["organization_id"], ["id"]
    )
    op.add_column(
        "whatsapp_users", sa.Column("account_sid", sa.String(), nullable=True)
    )
    op.add_column(
        "whatsapp_users", sa.Column("profile_name", sa.String(), nullable=True)
    )
    op.add_column(
        "whatsapp_users", sa.Column("organization_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "whatsapp_users", "organizations", ["organization_id"], ["id"]
    )
    op.drop_column("whatsapp_users", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "whatsapp_users",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "whatsapp_users", type_="foreignkey")
    op.drop_column("whatsapp_users", "organization_id")
    op.drop_column("whatsapp_users", "profile_name")
    op.drop_column("whatsapp_users", "account_sid")
    op.drop_constraint(None, "whatsapp_threads", type_="foreignkey")
    op.alter_column(
        "whatsapp_threads",
        "updated_at",
        existing_type=sa.DateTime(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    op.alter_column(
        "whatsapp_threads",
        "created_at",
        existing_type=sa.DateTime(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    op.alter_column(
        "whatsapp_threads",
        "is_active",
        existing_type=sa.Boolean(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.drop_column("whatsapp_threads", "organization_id")
    op.drop_constraint(None, "whatsapp_messages", type_="foreignkey")
    op.drop_column("whatsapp_messages", "entities")
    op.drop_column("whatsapp_messages", "sentiment")
    op.drop_column("whatsapp_messages", "intent")
    op.drop_column("whatsapp_messages", "media")
    op.drop_column("whatsapp_messages", "num_media")
    op.drop_column("whatsapp_messages", "num_segments")
    op.drop_column("whatsapp_messages", "message_type")
    op.drop_column("whatsapp_messages", "profile_name")
    op.drop_column("whatsapp_messages", "sms_status")
    op.drop_column("whatsapp_messages", "wa_id")
    op.drop_column("whatsapp_messages", "message_sid")
    op.drop_column("whatsapp_messages", "thread_id")
    op.create_table(
        "checkpoint_migrations",
        sa.Column("v", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("v", name="checkpoint_migrations_pkey"),
    )
    op.create_table(
        "checkpoints",
        sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "checkpoint_ns",
            sa.TEXT(),
            server_default=sa.text("''::text"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("checkpoint_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "parent_checkpoint_id", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "checkpoint",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "thread_id", "checkpoint_ns", "checkpoint_id", name="checkpoints_pkey"
        ),
    )
    op.create_index(
        "checkpoints_thread_id_idx", "checkpoints", ["thread_id"], unique=False
    )
    op.create_table(
        "checkpoint_blobs",
        sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "checkpoint_ns",
            sa.TEXT(),
            server_default=sa.text("''::text"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("channel", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("blob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "thread_id",
            "checkpoint_ns",
            "channel",
            "version",
            name="checkpoint_blobs_pkey",
        ),
    )
    op.create_index(
        "checkpoint_blobs_thread_id_idx",
        "checkpoint_blobs",
        ["thread_id"],
        unique=False,
    )
    op.create_table(
        "checkpoint_writes",
        sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "checkpoint_ns",
            sa.TEXT(),
            server_default=sa.text("''::text"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("checkpoint_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("task_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("idx", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("channel", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("blob", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.Column(
            "task_path",
            sa.TEXT(),
            server_default=sa.text("''::text"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "thread_id",
            "checkpoint_ns",
            "checkpoint_id",
            "task_id",
            "idx",
            name="checkpoint_writes_pkey",
        ),
    )
    op.create_index(
        "checkpoint_writes_thread_id_idx",
        "checkpoint_writes",
        ["thread_id"],
        unique=False,
    )
    # ### end Alembic commands ###
